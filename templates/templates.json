{
    "version": "2",
    "templates": [
        {
            "type": 3,
            "title": "Plex torrent server",
            "description": "A Plex server with a torrent client",
            "categories": [
                "media"
            ],
            "logo": "https://www.plex.tv/wp-content/themes/plex/assets/img/plex-logo.svg",
            "repository": {
                "url": "https://github.com/nicoverali/portainer-home-server.git",
                "stackfile": "templates/plex-server-torrent/docker-compose.yml"
            },
            "env": [
                {
                    "name": "BASE_PATH",
                    "label": "Stack base path",
                    "description": "Base path or folder for this stack"
                },
                {
                    "name": "PLEX_PORT",
                    "label": "Plex port",
                    "default": "32400",
                    "description": "The open port for Plex media server"
                },
                {
                    "name": "TORRENT_WEB_PORT",
                    "label": "Torrent web port",
                    "default": "9091",
                    "description": "Port for torrent web client"
                },
                {
                    "name": "TORRENT_PORT",
                    "label": "Torrent port",
                    "default": "6881",
                    "description": "Port for torrent P2P connections"
                }
            ]
        },
        {
            "type": 3,
            "title": "Pi-hole DNS",
            "description": "A Pi-hole DNS instance for local routing and ads blocking",
            "categories": [
                "network"
            ],
            "logo": "https://wp-cdn.pi-hole.net/wp-content/uploads/2016/12/Vortex-R.webp",
            "repository": {
                "url": "https://github.com/nicoverali/portainer-home-server.git",
                "stackfile": "templates/pi-hole/docker-compose.yml"
            },
            "env": [
                {
                    "name": "BASE_PATH",
                    "label": "Stack base path",
                    "description": "Base path or folder for this stack"
                },
                {
                    "name": "PIHOLE_PORT",
                    "label": "Pi-hole port",
                    "default": "80",
                    "description": "The open port for Pi-hole web interface"
                },
                {
                    "name": "PIHOLE_PASSWORD",
                    "label": "Pi-hole password",
                    "description": "Admin password for Pi-hole web interface"
                }
            ]
        },
        {
            "type": 3,
            "title": "Nginx Reverse Proxy",
            "description": "An Nginx instance to do reverse proxying to home server services",
            "categories": [
                "network"
            ],
            "logo": "https://www.nginx.com/wp-content/uploads/2020/05/NGINX-product-icon.svg",
            "repository": {
                "url": "https://github.com/nicoverali/portainer-home-server.git",
                "stackfile": "templates/nginx-reverse-proxy/docker-compose.yml"
            },
            "env": [
                {
                    "name": "PLEX_PORT",
                    "label": "Plex port",
                    "description": "Port for Plex server"
                },
                {
                    "name": "PIHOLE_PORT",
                    "label": "Pi-hole port",
                    "description": "Port for Pi-hole"
                },
                {
                    "name": "TORRENT_PORT",
                    "label": "Torrent web port",
                    "description": "Port for web torrent client"
                },
                {
                    "name": "PORTAINER_PORT",
                    "label": "Portainer port",
                    "description": "Port for Portainer server"
                },
                {
                    "name": "OMV_PORT",
                    "label": "OpenMediaVault port",
                    "description": "Port for OpenMediaVault"
                }
            ]
        }
    ]
}